{"version":3,"sources":["../../src/pages/survey-list/survey-list.module.ts","../../src/pages/survey-list/survey-list.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AACL;AAU3C;IAAA;IAA+B,CAAC;IAAnB,gBAAgB;QAR5B,+DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,gEAAU;aACX;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,gEAAU,CAAC;aACrC;SACF,CAAC;OACW,gBAAgB,CAAG;IAAD,uBAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;;ACZa;AACe;AAGQ;AACN;AACA;AAQ3D;IAOE,oBAAmB,OAAsB,EAAS,SAAoB,EAAS,cAA8B,EACnG,WAAwB,EACxB,WAAwB;QAFf,YAAO,GAAP,OAAO,CAAe;QAAS,cAAS,GAAT,SAAS,CAAW;QAAS,mBAAc,GAAd,cAAc,CAAgB;QACnG,gBAAW,GAAX,WAAW,CAAa;QACxB,gBAAW,GAAX,WAAW,CAAa;QAPlC,oBAAe,GAAG,EAAE,CAAC;QACrB,0BAAqB,GAAG,EAAE,CAAC;QAC3B,kBAAa,GAAQ,EAAE,CAAC;QACxB,UAAK,GAAQ,EAAE,CAAC;QAKd,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,CAAC;QACvE,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,CAAC;QACrE,IAAI,CAAC,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IAC7C,CAAC;IAED,mCAAc,GAAd;QACE,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;IAC3C,CAAC;IAED,qCAAgB,GAAhB;QACE,0BAA0B;IAC5B,CAAC;IAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAqCI;IAEJ,gCAAW,GAAX,UAAY,KAAU;QACpB,KAAK,CAAC,IAAI,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC;IAC3B,CAAC;IAED,iCAAY,GAAZ,UAAa,KAAU;QACrB,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC;IACpB,CAAC;IAED,sCAAiB,GAAjB,UAAkB,cAAc;QAC9B,IAAI,kBAAkB,GAAG,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;QACxD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE,gBAAgB,EAAE,kBAAkB,EAAE,CAAC,CAAC;IACzE,CAAC;IAzEU,UAAU;QAJtB,gEAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;WACG;SAChC,CAAC;yFAQ6G;YACtF,4EAAW;YACX,OAAW;OATvB,UAAU,CA2EtB;IAAD,CAAC;AAAA;SA3EY,UAAU,oB","file":"15.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { SurveyList } from './survey-list';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SurveyList,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(SurveyList),\r\n  ],\r\n})\r\nexport class SurveyListModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/survey-list/survey-list.module.ts","import { Component } from '@angular/core';\r\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\r\nimport * as moment from 'moment';\r\n\r\nimport { LoadingService } from '../../providers/loading-service';\r\nimport { DataService } from '../../providers/data-service';\r\nimport { ShowMessage } from '../../providers/show-message';\r\nimport { HomePage } from '../../pages/home/home';\r\n\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-survey-list',\r\n  templateUrl: 'survey-list.html',\r\n})\r\nexport class SurveyList {\r\n\r\n  new_survey_list = [];\r\n  completed_survey_list = [];\r\n  loginResponse: any = {};\r\n  token: any = \"\";\r\n\r\n  constructor(public navCtrl: NavController, public navParams: NavParams, public loadingService: LoadingService,\r\n    private dataService: DataService,\r\n    private showMessage: ShowMessage) {\r\n    this.loginResponse = JSON.parse(localStorage.getItem(\"loginResponse\"));\r\n    this.new_survey_list = JSON.parse(this.navParams.get(\"new_surveys\"));\r\n    this.token = localStorage.getItem(\"token\");\r\n  }\r\n\r\n  ionViewDidLoad() {\r\n    console.log('ionViewDidLoad SurveyList');\r\n  }\r\n\r\n  ionViewWillEnter() {\r\n    /* this.getAllSurves(); */\r\n  }\r\n\r\n  /* getAllSurves() {\r\n    this.loadingService.showLoading();\r\n    this.dataService.postData(\"allSurveys\", {\r\n      \"estateName\": this.loginResponse.user.estateName,\r\n      \"userId\": this.loginResponse.user._id\r\n    }, {\r\n        headers: {\r\n          'authorization': this.token\r\n        }\r\n      }).subscribe(results => {\r\n        if (results.success == true) {\r\n          this.survey_list = results.survey;\r\n          console.log(results);\r\n          this.completed_survey_list = results.completedSurveys;\r\n          console.log(this.completed_survey_list);\r\n          this.survey_list.forEach(element => {\r\n            element.effectiveTo = moment(element.effectiveTo).format('YYYY-MM-DD HH:mm');\r\n            this.completed_survey_list.forEach(completedElement => {\r\n              if (element._id == completedElement) {\r\n                element.is_finished = true;\r\n              }\r\n            });\r\n          });\r\n          this.loadingService.hideLoading();\r\n        }\r\n        else {\r\n          this.showMessage.showToastBottom(results.message);\r\n          this.loadingService.hideLoading();\r\n          if (results.message == \"Invalid token\" || results.message == \"Please login\") {\r\n            this.navCtrl.setRoot(HomePage);\r\n          }\r\n        }\r\n      }, err => {\r\n        console.log(\"err\", err);\r\n        this.loadingService.hideLoading();\r\n        this.showMessage.showToastBottom(\"Unable to get Surveys, please try again.\");\r\n      });\r\n  } */\r\n\r\n  toggleGroup(group: any) {\r\n    group.show = !group.show;\r\n  }\r\n\r\n  isGroupShown(group: any) {\r\n    return group.show;\r\n  }\r\n\r\n  viewSurveyDetails(survey_details) {\r\n    let tmp_survey_details = JSON.stringify(survey_details);\r\n    this.navCtrl.push(\"Surveys\", { \"survey_details\": tmp_survey_details });\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/survey-list/survey-list.ts"],"sourceRoot":""}