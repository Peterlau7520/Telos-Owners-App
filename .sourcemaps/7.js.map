{"version":3,"sources":["../../src/pages/surveys/surveys.module.ts","../../src/pages/surveys/surveys.ts"],"names":[],"mappings":"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","file":"7.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { Surveys } from './surveys';\n\n@NgModule({\n  declarations: [\n    Surveys,\n  ],\n  imports: [\n    IonicPageModule.forChild(Surveys),\n  ],\n})\nexport class SurveysModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/surveys/surveys.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport { ShowMessage } from '../../providers/show-message';\n\n@IonicPage()\n@Component({\n  selector: 'page-surveys',\n  templateUrl: 'surveys.html',\n})\nexport class Surveys {\n  group_list: any = [];\n  survey_list: any = [];\n  survey_details: any = {};\n  constructor(public navCtrl: NavController, public navParams: NavParams, public showMessage: ShowMessage) {\n    this.survey_details = JSON.parse(this.navParams.get(\"survey_details\"));\n    console.log(this.survey_details);\n    this.getStaticData();\n  }\n\n  getStaticData() {\n    this.survey_list = [];\n    this.group_list = [];\n    for (let i = 0; i < 3; i++) {\n      let tmp_group_list = [];\n      for (let j = 0; j < 2; j++) {\n        let tmp_option_list = [];\n        tmp_group_list.push({\n          \"group_title\": \"Survey Question\"\n        });\n        for (let k = 0; k < 2; k++) {\n          tmp_option_list.push({\n            \"cost\": \"\",\n            \"description\": \"sample description sample description sample description sample description\",\n            \"is_checked\": false\n          });\n        }\n        console.log(tmp_option_list);\n        tmp_group_list[j].option_list = tmp_option_list;\n      }\n      this.survey_details.group_list = tmp_group_list;\n      this.survey_details.group_list[0].show = true;\n    }\n    console.log(this.survey_list);\n    let tmp_data = JSON.stringify(this.survey_list);\n    console.log(tmp_data);\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad Surveys');\n  }\n\n  toggleGroup1(group: any, i, survey_details) {\n    console.log(group);\n    let tmp_group_list = survey_details.group_list;\n    for (let j = 0; j < tmp_group_list.length; j++) {\n      if (j == i) {\n        /* tmp_group_list[j].show = true; */\n        if (tmp_group_list[j].show == true) {\n          tmp_group_list[j].show = false;\n        }\n        else {\n          tmp_group_list[j].show = true;\n        }\n      }\n      else {\n        tmp_group_list[j].show = false;\n      }\n    }\n    /* group.show = !group.show; */\n  }\n\n  toggleGroup(group: any) {\n    group.show = !group.show;\n  }\n\n  isGroupShown(group: any) {\n    return group.show;\n  }\n\n  submitData(group_list) {\n    /* group.is_complete = true; */\n    console.log(group_list);\n    /* for (let i = 0; i < group.length; i++) {\n      console.log(group[i]);\n      let tmp_option_list = group[i].option_list;\n      for (let j = 0; j < tmp_option_list.length; j++) {\n        if (tmp_option_list[j].is_checked == true) {\n          console.log(\"TRUE\");\n          group[i].is_complete = true;\n          j++;\n        }\n        else {\n          console.log(\"FALSE\");\n          group[i].is_complete = false;\n        }\n      }\n    } */\n    for (let l = 0; l < group_list.length; l++) {\n      const element = group_list[l];\n      if (!element.is_complete || element.is_complete == false) {\n        console.log(element);\n        this.showMessage.showToastBottom(\"Please answer each question.\");\n        return false;\n      }\n      else {\n\n      }\n    }\n    this.showMessage.showToastBottom(\"Answers saved successfully!\");\n  }\n\n  valueChanged(group, i, survey_details) {\n    console.log(group);\n    console.log(i);\n    console.log(survey_details);\n    /* for (let j = 0; j < survey_details.length; j++) {\n      console.log(survey_details[j].is_complete);\n    } */\n    if (group.is_complete && group.is_complete > 0) {\n      this.toggleGroup(group);\n      let tmp_group_list = survey_details.group_list;\n      i++;\n      console.log(i);\n      console.log(tmp_group_list.length);\n      if (i < tmp_group_list.length) {\n        this.toggleGroup(tmp_group_list[i]);\n      }\n    }\n    /* let tmp_option_list = group.option_list;\n    for (let j = 0; j < tmp_option_list.length; j++) {\n      if (j != k) {\n        console.log(\"TRUE\");\n        group.option_list[j].is_checked = false;\n      }\n      else {\n        group.is_complete = true;\n        group.option_list[j].is_checked = true;\n      }\n    }\n    if (event.checked == true) {\n      this.toggleGroup(group);\n      let tmp_group_list = survey_details.group_list;\n      i++;\n      console.log(i);\n      console.log(tmp_group_list.length);\n      if (i < tmp_group_list.length) {\n        this.toggleGroup(tmp_group_list[i]);\n      }\n    } */\n    /* else {\n      group.is_complete = false;\n    } */\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/surveys/surveys.ts"],"sourceRoot":""}