{"version":3,"sources":["../../src/pages/surveys/surveys.module.ts","../../src/pages/surveys/surveys.ts"],"names":[],"mappings":"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","file":"14.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { Surveys } from './surveys';\n\n@NgModule({\n  declarations: [\n    Surveys,\n  ],\n  imports: [\n    IonicPageModule.forChild(Surveys),\n  ],\n})\nexport class SurveysModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/surveys/surveys.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\n\nimport { LoadingService } from '../../providers/loading-service';\nimport { DataService } from '../../providers/data-service';\nimport { ShowMessage } from '../../providers/show-message';\nimport { HomePage } from '../../pages/home/home';\n\n@IonicPage()\n@Component({\n  selector: 'page-surveys',\n  templateUrl: 'surveys.html',\n})\nexport class Surveys {\n\n  group_list: any = [];\n  survey_list: any = [];\n  survey_details: any = {};\n  questionsArray: any = [];\n  loginResponse: any = {};\n  token: any = \"\";\n\n  constructor(public navCtrl: NavController, public navParams: NavParams, public loadingService: LoadingService,\n    private dataService: DataService,\n    private showMessage: ShowMessage) {\n    this.survey_details = JSON.parse(this.navParams.get(\"survey_details\"));\n    this.loginResponse = JSON.parse(localStorage.getItem(\"loginResponse\"));\n    this.token = localStorage.getItem(\"token\");\n    console.log(this.survey_details);\n    /* this.getStaticData(); */\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad Surveys');\n    this.assignValuesToCompletedSurveys(this.survey_details);\n  }\n\n  assignValuesToCompletedSurveys(survey_details) {\n    let env = this;\n    env.survey_details.question.forEach(function (questionEle, j) {\n      env.survey_details.completed_questions.forEach(function (completedEle, k) {\n        if (completedEle.questionId == questionEle._id) {\n          questionEle.optionIds.forEach(function (questionOption, k) {\n            console.log(completedEle);\n            console.log(questionOption);\n            if (completedEle.optionId == questionOption._id) {\n              questionEle.is_complete = k + 1;\n            }\n          });\n          /* questionEle.is_complete =  */\n          /* questionEle.is_complete = 1; */\n        }\n      });\n    });\n  }\n\n  toggleGroup1(group: any, i, survey_details) {\n    /* console.log(group); */\n    let tmp_group_list = survey_details.question;\n    for (let j = 0; j < tmp_group_list.length; j++) {\n      if (j == i) {\n        /* tmp_group_list[j].show = true; */\n        if (tmp_group_list[j].show == true) {\n          tmp_group_list[j].show = false;\n        }\n        else {\n          tmp_group_list[j].show = true;\n        }\n      }\n      else {\n        tmp_group_list[j].show = false;\n      }\n    }\n    /* group.show = !group.show; */\n  }\n\n  toggleGroup(group: any) {\n    group.show = !group.show;\n  }\n\n  isGroupShown(group: any) {\n    return group.show;\n  }\n\n  submitData(group_list) {\n    /* group.is_complete = true; */\n    this.questionsArray = [];\n    console.log(group_list);\n    /* for (let i = 0; i < group.length; i++) {\n      console.log(group[i]);\n      let tmp_option_list = group[i].option_list;\n      for (let j = 0; j < tmp_option_list.length; j++) {\n        if (tmp_option_list[j].is_checked == true) {\n          console.log(\"TRUE\");\n          group[i].is_complete = true;\n          j++;\n        }\n        else {\n          console.log(\"FALSE\");\n          group[i].is_complete = false;\n        }\n      }\n    } */\n    for (let l = 0; l < group_list.length; l++) {\n      const element = group_list[l];\n      if (!element.is_complete || element.is_complete == false) {\n        console.log(element);\n        this.showMessage.showToastBottom(\"請回答每一項問題 :) | Please answer each question.\");\n        return false;\n      }\n      console.log(\"element\", element);\n      this.questionsArray.push({ \"questionId\": element.optionIds[element.is_complete - 1].questionId, \"optionId\": element.optionIds[element.is_complete - 1]._id });\n    }\n    console.log(\"this.questionsArray\", this.questionsArray);\n    /* this.showMessage.showToastBottom(\"Answers saved successfully!\"); */\n    this.saveSurveyData(this.questionsArray);\n  }\n\n  saveSurveyData(questionsArray) {\n    let request_data = {\n      surveyId: this.survey_details._id,\n      questions: questionsArray,\n      userId: this.loginResponse.user._id\n    }\n\n    this.loadingService.showLoading(\"my-loading-class\");\n    this.dataService.postData(\"submitSurveys\", request_data, {\n      headers: {\n        'authorization': this.token\n      }\n    }).subscribe(results => {\n      if (results.success == true) {\n        this.showMessage.showToastBottom(results.message);\n        this.survey_details.is_completed = true;\n        this.loadingService.hideLoading();\n      }\n      else {\n        this.showMessage.showToastBottom(results.message);\n        this.loadingService.hideLoading();\n        if (results.message == \"Invalid token\" || results.message == \"Please login\") {\n          this.navCtrl.setRoot(HomePage);\n        }\n      }\n    }, err => {\n      console.log(\"err\", err);\n      this.loadingService.hideLoading();\n      this.showMessage.showToastBottom(\"網絡連接問題，請重試 | Unable to save survey data, please try again.\");\n    });\n  }\n\n  valueChanged(group, i, survey_details) {\n    /* console.log(group);\n    console.log(i);\n    console.log(survey_details); */\n    if (group.is_complete) {\n      this.toggleGroup(group);\n      let tmp_group_list = survey_details.question;\n      i++;\n      /* console.log(i);\n      console.log(tmp_group_list.length); */\n      if (i < tmp_group_list.length) {\n        this.toggleGroup(tmp_group_list[i]);\n      }\n    }\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/surveys/surveys.ts"],"sourceRoot":""}